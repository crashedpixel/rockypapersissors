{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Projects/rockypapersissors/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useRef, useState } from 'react';\nimport logo from './logo.svg';\nimport { CONST } from './App.constant';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [game, setGame] = useState(localStorage.getItem('rockpapersissors'));\n  const [hasGameStarted, setHasGameStarted] = useState(false);\n  const [configNewGame, setConfigNewGame] = useState(false);\n  const [activePlayer, setActivePlayer] = useState(CONST.player1);\n  const isActivePlayer = useCallback(index => index == activePlayer);\n  const getPlayerName = useCallback(index => game[`player${index}`].name);\n  const getPlayerScore = useCallback(index => game[`player${index}`].score);\n  const getPlayerHeaderHTML = useCallback(index => /*#__PURE__*/_jsxDEV(\"p\", {\n    className: isActivePlayer(index) && 'active',\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [CONST[`player${index + 1}Label`], \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 54\n    }, this), \" \", getPlayerName(index), \" - \", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Score:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 126\n    }, this), \" \", getPlayerScore(index)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this));\n  const getPlayerNameFieldHTML = useCallback(index => /*#__PURE__*/_jsxDEV(\"label\", {\n    children: [CONST.formLabel, \" \", index, \": \", /*#__PURE__*/_jsxDEV(\"input\", {\n      name: `player${index}`,\n      type: \"text\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 39\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this));\n\n  const onStartNewGame = event => {\n    event.preventDefault();\n    setGame({\n      player1: {\n        name: event.target.player1.value,\n        score: 0\n      },\n      player2: {\n        name: event.target.player2.value,\n        score: 0\n      }\n    });\n    setHasGameStarted(true);\n  }; // const choices = ['rock', 'paper', 'sissors'];\n  // const [model, setModel] = useState('CLOSED');\n  // const [players, setPlayers] = useState({\n  //   player1: { name: 'Michael', score: 12 },\n  //   player2: { name: 'Michael', score: 12 },\n  // });\n  // const hand1 = useRef();\n  // const hand2 = useRef();\n  // const onPlayerHand = useCallback((player) => {\n  //   const choice = choices[Math.floor(Math.random() * 3)];\n  //   player.current.classList.remove('rock', 'paper', 'sissors');\n  //   setTimeout(() => player.current.classList.add(choice), 1);\n  // });\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [!hasGameStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"model\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: CONST.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), configNewGame ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: event => onStartNewGame(event),\n          children: [[1, 2].map(index => getPlayerNameFieldHTML(index)), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: CONST.startGameBtn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setConfigNewGame(true),\n            children: CONST.newGameBtn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: \"!game\",\n            children: CONST.loadGameBtn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }, this), hasGameStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [getPlayerHeaderHTML(CONST.player1), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), getPlayerHeaderHTML(CONST.player2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"BM0AM4WGzD5H5elWMEByfzgqoCY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useCallback","useRef","useState","logo","CONST","App","game","setGame","localStorage","getItem","hasGameStarted","setHasGameStarted","configNewGame","setConfigNewGame","activePlayer","setActivePlayer","player1","isActivePlayer","index","getPlayerName","name","getPlayerScore","score","getPlayerHeaderHTML","getPlayerNameFieldHTML","formLabel","onStartNewGame","event","preventDefault","target","value","player2","title","map","startGameBtn","newGameBtn","loadGameBtn"],"sources":["/Users/admin/Projects/rockypapersissors/src/App.js"],"sourcesContent":["import { useCallback, useRef, useState } from 'react';\nimport logo from './logo.svg';\nimport { CONST } from './App.constant';\nimport './App.css';\n\nfunction App() {\n  const [game, setGame] = useState(localStorage.getItem('rockpapersissors'));\n  const [hasGameStarted, setHasGameStarted] = useState(false);\n  const [configNewGame, setConfigNewGame] = useState(false);\n\n  const [activePlayer, setActivePlayer] = useState(CONST.player1);\n\n  const isActivePlayer = useCallback((index) => index == activePlayer);\n  const getPlayerName = useCallback((index) => game[`player${index}`].name);\n  const getPlayerScore = useCallback((index) => game[`player${index}`].score);\n  const getPlayerHeaderHTML = useCallback((index) =>\n    <p className={isActivePlayer(index) && 'active'}><span>{CONST[`player${index+1}Label`]}:</span> {getPlayerName(index)} - <span>Score:</span> {getPlayerScore(index)}</p>);\n  const getPlayerNameFieldHTML = useCallback((index) => \n    <label>{CONST.formLabel} {index}: <input name={`player${index}`} type=\"text\" required /></label>);\n  const onStartNewGame = (event) => {\n    event.preventDefault();\n    setGame({\n      player1: {\n        name: event.target.player1.value,\n        score: 0,\n      },\n      player2: {\n        name: event.target.player2.value,\n        score: 0,\n      },\n    });\n    setHasGameStarted(true);\n  };\n\n\n  // const choices = ['rock', 'paper', 'sissors'];\n  // const [model, setModel] = useState('CLOSED');\n  // const [players, setPlayers] = useState({\n  //   player1: { name: 'Michael', score: 12 },\n  //   player2: { name: 'Michael', score: 12 },\n  // });\n  // const hand1 = useRef();\n  // const hand2 = useRef();\n  // const onPlayerHand = useCallback((player) => {\n  //   const choice = choices[Math.floor(Math.random() * 3)];\n  //   player.current.classList.remove('rock', 'paper', 'sissors');\n  //   setTimeout(() => player.current.classList.add(choice), 1);\n  // });\n\n  return (\n    <div className=\"app\">\n        {!hasGameStarted && <div className=\"model\">\n          <div className=\"container\">\n            <h2>{CONST.title}</h2>\n              {configNewGame ? <form onSubmit={(event) => onStartNewGame(event)}>\n                {[1,2].map((index) => getPlayerNameFieldHTML(index))}\n                <button>{CONST.startGameBtn}</button>\n              </form> : <div className=\"controls\">\n                <button onClick={() => setConfigNewGame(true)}>{CONST.newGameBtn}</button>\n                <button disabled=\"!game\">{CONST.loadGameBtn}</button>\n              </div>}\n          </div>\n        </div>}\n      {hasGameStarted && <div className=\"game\">\n        <div className=\"header\">\n          {getPlayerHeaderHTML(CONST.player1)}\n          <p>vs</p>\n          {getPlayerHeaderHTML(CONST.player2)}\n        </div>\n        <div className=\"container\">\n          <div className=\"player\">\n            <div  className=\"hand\"></div>\n          </div>\n          <div className=\"player\">\n            <div  className=\"hand\"></div>\n          </div>\n        </div>\n      </div>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}