{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Projects/rockypapersissors/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { CONST } from './App.constant';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const hand1 = useRef();\n  const hand2 = useRef();\n  const choices = ['rock', 'paper', 'sissors'];\n  const [game, setGame] = useState(localStorage.getItem('rockpapersissors'));\n  const [hasGameStarted, setHasGameStarted] = useState(false);\n  const [configNewGame, setConfigNewGame] = useState(false);\n  const [activePlayer, setActivePlayer] = useState(CONST.player1);\n  const isActivePlayer = useCallback(index => index == activePlayer);\n  const getPlayerName = useCallback(index => game[`player${index}`].name);\n  const getPlayerScore = useCallback(index => game[`player${index}`].score);\n  const getPlayerHeaderHTML = useCallback(index => /*#__PURE__*/_jsxDEV(\"p\", {\n    className: isActivePlayer(index) && 'active',\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [CONST.playerLabel, \" \", index, \" \", index === 2 && '(computer)', \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 54\n    }, this), \" \", getPlayerName(index), \" - \", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [CONST.scoreLabel, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 151\n    }, this), \" \", getPlayerScore(index)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this));\n  const getPlayerNameFieldHTML = useCallback(index => /*#__PURE__*/_jsxDEV(\"label\", {\n    children: [CONST.playerLabel, \" \", index, \": \", /*#__PURE__*/_jsxDEV(\"input\", {\n      name: `player${index}`,\n      type: \"text\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 53\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this));\n\n  const getPlayerHandHTML = index => {\n    let classList = 'hand';\n    if (activePlayer == index) classList += ' active';else classList += ' disabled';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: [`hand${index}`],\n      className: \"player\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classList,\n        onClick: onPlayerHand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 71\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  };\n\n  const onStartNewGame = event => {\n    event.preventDefault();\n    setGame({\n      player1: {\n        name: event.target.player1.value,\n        score: 0\n      },\n      player2: {\n        name: event.target.player2.value,\n        score: 0\n      },\n      activePlayer: CONST.player1\n    });\n    setHasGameStarted(true);\n  };\n\n  const onLoadOldGame = () => {\n    const parsedGame = JSON.parse(game);\n    setGame(parsedGame);\n    setActivePlayer(parsedGame.activePlayer);\n    setHasGameStarted(true);\n  };\n\n  const onPlayerHand = event => {\n    event.target.classList.add(choices[Math.floor(Math.random() * 3)]);\n  }; // const [model, setModel] = useState('CLOSED');\n  // const [players, setPlayers] = useState({\n  //   player1: { name: 'Michael', score: 12 },\n  //   player2: { name: 'Michael', score: 12 },\n  // });\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [!hasGameStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"model\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: CONST.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), configNewGame ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: event => onStartNewGame(event),\n          children: [[1, 2].map(index => getPlayerNameFieldHTML(index)), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: CONST.startGameBtn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setConfigNewGame(true),\n            children: CONST.newGameBtn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onLoadOldGame(),\n            disabled: !game,\n            children: CONST.loadGameBtn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }, this), hasGameStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [getPlayerHeaderHTML(CONST.player1), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: CONST.vsLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), getPlayerHeaderHTML(CONST.player2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [1, 2].map(index => getPlayerHandHTML(index))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"B1KhPtYKNzpt9D3TMvhakkNJM2A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useCallback","useEffect","useRef","useState","CONST","App","hand1","hand2","choices","game","setGame","localStorage","getItem","hasGameStarted","setHasGameStarted","configNewGame","setConfigNewGame","activePlayer","setActivePlayer","player1","isActivePlayer","index","getPlayerName","name","getPlayerScore","score","getPlayerHeaderHTML","playerLabel","scoreLabel","getPlayerNameFieldHTML","getPlayerHandHTML","classList","onPlayerHand","onStartNewGame","event","preventDefault","target","value","player2","onLoadOldGame","parsedGame","JSON","parse","add","Math","floor","random","title","map","startGameBtn","newGameBtn","loadGameBtn","vsLabel"],"sources":["/Users/admin/Projects/rockypapersissors/src/App.js"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react';\nimport { CONST } from './App.constant';\nimport './App.css';\n\nfunction App() {\n  const hand1 = useRef();\n  const hand2 = useRef();\n  const choices = ['rock', 'paper', 'sissors'];\n\n  const [game, setGame] = useState(localStorage.getItem('rockpapersissors'));\n  const [hasGameStarted, setHasGameStarted] = useState(false);\n  const [configNewGame, setConfigNewGame] = useState(false);\n  const [activePlayer, setActivePlayer] = useState(CONST.player1);\n\n  const isActivePlayer = useCallback((index) => index == activePlayer);\n  const getPlayerName = useCallback((index) => game[`player${index}`].name);\n  const getPlayerScore = useCallback((index) => game[`player${index}`].score);\n\n  const getPlayerHeaderHTML = useCallback((index) =>\n    <p className={isActivePlayer(index) && 'active'}><span>{CONST.playerLabel} {index} {index === 2 && '(computer)'}:</span> {getPlayerName(index)} - <span>{CONST.scoreLabel}:</span> {getPlayerScore(index)}</p>);\n  const getPlayerNameFieldHTML = useCallback((index) => \n    <label key={index}>{CONST.playerLabel} {index}: <input name={`player${index}`} type=\"text\" required /></label>);\n  const getPlayerHandHTML = (index) => {\n    let classList = 'hand';\n    if (activePlayer == index) classList += ' active';\n    else classList += ' disabled';\n    return <div ref={[`hand${index}`]} key={index} className=\"player\"><div className={classList} onClick={onPlayerHand}></div></div>;\n  }\n\n  const onStartNewGame = (event) => {\n    event.preventDefault();\n    setGame({\n      player1: {\n        name: event.target.player1.value,\n        score: 0,\n      },\n      player2: {\n        name: event.target.player2.value,\n        score: 0,\n      },\n      activePlayer: CONST.player1,\n    });\n    setHasGameStarted(true);\n  };\n  const onLoadOldGame = () => {\n    const parsedGame = JSON.parse(game);\n    setGame(parsedGame);\n    setActivePlayer(parsedGame.activePlayer);\n    setHasGameStarted(true);\n  }\n  const onPlayerHand = (event) => {\n    event.target.classList.add(choices[Math.floor(Math.random() * 3)]);\n  }\n\n  // const [model, setModel] = useState('CLOSED');\n  // const [players, setPlayers] = useState({\n  //   player1: { name: 'Michael', score: 12 },\n  //   player2: { name: 'Michael', score: 12 },\n  // });\n\n  return (\n    <div className=\"app\">\n        {!hasGameStarted && <div className=\"model\">\n          <div className=\"container\">\n            <h2>{CONST.title}</h2>\n              {configNewGame ? <form onSubmit={(event) => onStartNewGame(event)}>\n                {[1,2].map((index) => getPlayerNameFieldHTML(index))}\n                <button>{CONST.startGameBtn}</button>\n              </form> : <div className=\"controls\">\n                <button onClick={() => setConfigNewGame(true)}>{CONST.newGameBtn}</button>\n                <button onClick={() => onLoadOldGame()} disabled={!game}>{CONST.loadGameBtn}</button>\n              </div>}\n          </div>\n        </div>}\n      {hasGameStarted && <div className=\"game\">\n        <div className=\"header\">\n          {getPlayerHeaderHTML(CONST.player1)}\n          <p>{CONST.vsLabel}</p>\n          {getPlayerHeaderHTML(CONST.player2)}\n        </div>\n        <div className=\"container\">\n          {[1,2].map((index) => getPlayerHandHTML(index))}\n        </div>\n      </div>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}